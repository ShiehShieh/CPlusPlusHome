v
a
a
a
a
a
a
a
a
a
a
a
a
v
a
a
a
a
a
a
a
a
a
a
a
a
a
a
a
a
a
a
a
a
a
a
a
a
a
a
a
a
a
a
a
a
t
a
a
a
a
a
a
a
a
a
a
a
a
a
a
a
a
a
a
a
a
a
a
a
a
a
a
a
a
it
we
as
in
at
by
in
of
in
we
an
at
or
on
to
by
or
of
by
by
of
to
if
to
of
of
is
in
of
he
is
in
of
in
if
xp
by
to
at
in
to
be
xp
to
to
of
or
to
to
on
is
of
by
on
is
of
to
in
be
in
is
in
by
of
in
as
as
of
of
in
in
by
of
to
he
an
to
in
to
to
of
an
of
to
so
if
of
of
of
in
as
if
is
by
of
it
is
an
is
of
to
of
no
by
is
is
it
of
to
in
of
is
on
is
by
to
to
or
of
to
no
is
if
is
of
is
to
it
to
on
or
to
or
to
of
us
to
it
is
to
at
to
it
it
is
in
by
of
or
in
to
to
if
is
we
at
to
as
is
an
as
we
as
of
in
it
in
be
an
to
of
as
an
in
we
as
an
of
is
be
so
no
it
is
we
so
is
as
in
in
to
to
to
or
is
of
of
is
of
he
is
in
of
to
to
is
of
of
as
of
is
to
we
in
no
to
of
on
is
of
we
is
in
to
is
or
of
to
of
is
to
in
of
in
be
an
in
if
so
to
we
of
to
in
it
as
in
as
as
as
to
it
or
as
is
it
at
in
to
it
to
in
we
of
is
we
in
an
of
al
to
et
by
in
we
in
to
as
in
in
to
is
if
go
to
is
to
be
we
of
so
at
or
to
it
as
in
to
as
is
it
we
to
an
to
to
as
to
an
of
in
is
is
to
it
is
as
is
as
be
is
or
if
in
it
to
be
be
be
it
we
to
as
is
of
of
of
no
is
we
to
or
of
to
up
or
it
we
or
of
is
to
an
to
to
to
it
to
the
you
may
and
the
the
put
the
for
its
the
web
out
the
the
any
may
can
use
the
now
the
the
the
the
may
not
may
the
add
the
can
not
for
our
the
and
the
and
the
the
way
the
the
the
the
for
atm
him
new
the
the
not
for
the
the
for
pay
you
may
and
the
the
set
you
may
the
one
our
and
for
the
the
his
way
act
was
one
the
and
had
the
the
was
see
out
the
for
can
not
the
the
nor
and
did
the
how
but
for
the
the
you
has
you
the
the
may
the
the
the
the
the
for
the
the
the
its
the
own
its
you
add
for
all
for
for
faq
son
its
the
new
the
not
the
the
the
the
for
for
the
the
its
the
and
may
the
the
the
you
any
the
for
the
has
all
but
are
the
the
the
the
the
the
not
the
the
out
but
way
and
the
way
new
for
atm
new
the
the
can
the
the
one
api
the
the
the
the
our
can
and
and
and
but
can
run
the
not
too
are
for
far
the
not
and
the
the
may
the
the
atm
you
far
the
the
his
new
for
the
see
the
the
the
one
the
the
for
the
his
the
but
the
api
the
the
the
has
the
see
fix
our
the
tim
the
and
the
the
are
the
the
the
the
for
the
all
but
the
day
the
and
the
are
the
the
and
the
and
has
the
its
its
age
but
and
new
the
the
the
the
new
but
atm
the
put
the
the
one
new
the
for
the
are
you
and
atm
you
the
the
may
you
the
you
you
the
the
the
and
the
the
the
has
for
the
the
the
the
the
the
has
the
use
the
the
for
its
and
day
the
the
the
the
for
the
see
for
the
run
the
the
new
for
the
the
the
the
the
all
the
out
the
and
you
and
the
you
day
the
and
the
and
are
roy
the
the
the
and
the
may
the
the
the
and
and
add
the
you
the
the
the
the
and
can
the
how
the
and
are
the
and
the
the
the
the
web
the
new
the
new
and
run
the
for
new
this
mock
view
your
uses
that
view
this
seed
copy
view
unit
test
code
test
void
your
then
unit
test
code
more
unit
tear
unit
firm
push
down
your
code
void
test
with
mock
mock
make
this
view
this
mock
only
this
ever
type
this
from
real
view
real
kind
java
just
void
code
fool
true
lead
void
that
test
code
this
like
have
many
type
must
unit
then
test
code
type
must
mock
when
same
long
just
some
into
type
rely
away
soon
test
unit
test
than
with
mock
code
this
have
with
many
fact
that
mock
that
that
test
mock
mock
many
with
step
unit
with
mock
mock
this
that
from
well
code
unit
mock
need
mock
mock
many
code
that
note
this
unit
then
with
make
many
mock
that
type
mock
will
then
that
that
make
test
base
this
data
very
many
like
this
this
hard
java
code
this
able
that
test
into
real
mock
much
unit
base
code
into
code
code
that
with
test
that
alex
have
with
that
test
this
look
view
this
mock
code
than
view
safe
when
have
void
page
need
uses
book
that
that
code
test
next
more
mock
that
that
term
ejb)
mock
code
mock
test
mock
make
mock
with
open
that
must
with
java
java
this
side
that
with
have
your
test
code
that
were
mock
that
unit
sure
same
that
like
file
test
mock
your
test
code
that
test
were
data
that
that
this
with
this
mock
your
with
used
also
make
full
more
zone
many
java
mock
were
that
that
your
test
helm
goal
test
unit
test
this
with
that
this
java
mock
more
only
john
also
that
test
that
find
used
gang
mock
does
four
more
much
code
feel
it's
that
that
unit
will
mock
code
test
more
grow
test
look
like
many
some
left
unit
test
also
mock
this
must
also
void
that
want
when
will
take
this
free
mock
code
java
must
from
also
note
java
test
unit
unit
that
that
with
code
test
that
must
that
when
look
like
this
lies
that
code
gang
unit
code
four
than
this
read
this
look
with
that
with
best
only
uses
does
that
test
unit
this
home
this
page
will
work
code
unit
tidy
code
this
side
void
eric
good
code
that
mock
real
than
when
than
test
most
uses
with
that
more
code
code
know
ways
test
that
that
mock
they
java
unit
java
code
java
void
true
void
this
done
also
unit
work
real
that
unit
list
some
most
this
this
test
root
code
when
this
back
code
java
step
into
this
will
true
mock
miss
test
book
with
what
mock
code
mock
mock
real
steve
local
shown
taken
shown
tests
state
class
local
using
tests
again
these
we're
often
class
level
point
whole
a.run
forum
makes
float
class
often
allow
don't
world
false
often
which
facet
every
track
roles
would
these
since
roles
after
might
first
comes
query
money
based
class
while
force
class
junit
class
being
coach
other
class
being
shown
offer
years
role)
third
won't
check
would
money
class
lunch
wants
query
gamma
erich
wrong
style
false
point
tests
state
would
trips
types
round
three
write
tests
small
worse
steps
these
tests
while
learn
cases
check
tests
being
which
apply
turns
write
solve
means
there
calls
other
sorry
jguru
class
their
craig
class
inner
class
paper
lower
right
often
shown
class
class
inner
using
would
junit
class
being
class
files
share
store
makes
class
about
could
allen
tests
paces
based
erich
gamma
order
ralph
still
known
inner
magic
great
class
inner
class
tests
using
those
tests
world
might
cases
float
snarl
heart
april
junit
check
would
takes
these
final
write
check
apply
class
might
float
atm's
solve
class
being
faced
rather
tested
return
status
public
before
entire
system
should
design
beyond
object
martin
amount
online
beyond
offers
atmgui
longer
domain
leaves
fowler
static
domain
inside
toward
inside
source
lookup
public
longer
public
aspect
change
follow
object
object
easier
object
design
method
design
object
atmgui
domain
atmgui
object
create
create
design
inside
domain
object
atmgui
object
yields
intact
atmgui
return
atmgui
result
tested
object
design
inside
object
public
method
status
object
object
before
amount
method
static
object
design
return
object
inside
object
atmgui
method
public
easier
enough
tested
design
become
astray
public
tested
teller
domain
bank's
martin
object
result
design
fowler
you're
always
return
remote
design
easier
worked
purple
public
always
offers
miller
object
played
return
method
object
points
atmgui
design
method
method
passed
method
object
system
object
target
record
inside
assure
simple
method
object
design
offers
target
always
passed
target
object
create
return
public
object
object
change
define
result
public
method
atmgui
atmgui
object
return
aspect
change
atmgui
layers
design
create
method
martin
charge
member
fowler
tested
member
object
object
design
tested
system
object
public
method
object
column
object
object
target
method
called
source
object
backed
effect
object
notice
wisdom
return
method
common
public
method
object
delete
create
method
rather
object
object
making
object
system
purple
target
tested
object
object
pietri
create
option
member
purple
proper
object
design
middle
blocks
common
object
object
coding
object
object
itself
method
target
object
create
design
object
tested
object
target
method
object
source
values
method
useful
method
method
object
before
assure
invoke
lookup
merely
create
obtain
domain
return
return
object
public
object
method
rather
adding
domain
access
tested
method
atmgui
philip
you're
public
atmgui
making
better
pietri
object
tested
verify
obtain
widely
object
pietri
method
called
method
method
method
create
follow
either
object
though
object
longer
tested
obtain
simple
design
recipe
tested
create
should
method
covers
object
object
inside
public
domain
simple
object
method
passed
cannot
factory
trouble
without
class's
testing
objects
factory
finally
gamelan
testing
instead
calling
closely
objects
instead
extract
pattern
factory
returns
extract
class's
factory
rewrite
present
contact
testing
objects
factory
dealing
william
ability
because
correct
process
factory
example
freeman
objects
popular
started
classes
objects
testing
instead
service
because
systems
because
working
inverse
instead
objects
manages
aspectj
section
suffice
because
asserts
writing
objects
factory
clearer
analyst
instead
objects
factory
because
extract
process
factory
objects
balance
william
finally
listing
listing
tempted
objects
objects
started
private
further
testing
replace
chaffee
factory
objects
earning
extreme
boolean
however
factory
defined
finally
pattern
objects
keyword
objects
project
private
popular
emitted
extends
protect
effects
follows
private
company
account
scissor
started
creates
correct
testing
reading
factory
objects
because
factory
problem
factory
objects
william
founder
between
created
various
extends
factory
extreme
methods
factory
objects
listing
listing
because
chaffee
behaves
factory
article
authors
extract
objects
various
factory
without
article
objects
calling
between
sharing
factory
forcing
methods
improve
correct
factory
richard
correct
achieve
article
because
concise
section
johnson
aspectj
problem
factory
factory
objects
because
through
objects
returns
correct
example
listing
testing
produce
pattern
insight
example
mutator
october
objects
testing
methods
imagine
testing
writing
concept
cleaner
develop
objects
cleaner
objects
chaffee
machine
display
testing
between
details
pattern
instead
boolean
listing
provide
listing
extends
initial
methods
clarity
private
account
support
example
however
systems
becomes
perform
private
changes
dilemma
january
callers
objects
provide
problem
objects
testing
quality
listing
founder
aspectj
seminal
testing
factory
correct
scissor
example
aspectj
account
objects
extends
cleaner
balance
modular
problem
listing
compare
listing
listing
objects
enables
problem
listing
listing
changes
testing
contact
pollute
example
private
william
install
account
methods
original
database
refactor
requires
approach
boldface
database
object's
database
changing
flexibly
testcase
nicholas
increase
exercise
remember
analysis
mockview
conforms
together
critical
checking
override
mockview
mockview
examines
approach
language
instance
factory"
behavior
attached
analysis
matching
software
database
original
addition
approach
abstract
software
defining
scenario
includes
mockview
increase
resource
mockview
override
non-mock
hundreds
abstract
validate
language
expected
object's
original
approach
articles
patterns
detailed
abstract
validate
optional
replaced
abstract
performs
creation
expected
solution
obtained
override
thirteen
object's
override
existing
subclass
computer
november
original
provides
requires
returned
addition
invoking
language
language
replaced
resource
training
servlets
fowler's
subclass
creating
creation
original
creation
coverage
designed
director
solution
overrode
creation
slightly
accepted
instance
instance
creation
write-up
lesiecki
behavior
returned
javabean
behavior
existing
approach
practice
creation
software
software
patterns
earthweb
solution
supports
function
consists
solution
patterns
original
suggests
simplest
patterns
provides
together
creation
refactor
abstract
variable
instance
patterns
subclass
patterns
patterns
elements
instance
reusable
method's
software
tutorial
subclass
two-part
multiple
supposed
cookbook
flexibly
override
untested
nicholas
validate
override
lesiecki
subclass
official
override
patterns
delegate
changing
identify
protected
directory
automated
resources
interface
v.display
desirable
signature
anonymous
vlissides
configure
parameter
confusing
community
framework
signature
mechanics
inventors
mechanics
mediators
reference
according
concerned
situation
technical
designing
automated
difficult
framework
obtaining
situation
framework
interface
reentrant
described
desirable
ourselves
mechanics
component
component
interface
immediate
replacing
reference
concerned
variables
overrides
practical
mackinnon
v.display
otherwise
protected
expensive
discussed
factories
resources
protected
resources
sometimes
websphere
developer
protected
languages
different
effective
resulting
asserting
developer
improving
protected
assurance
interface
debugging
websphere
alexander
improving
interface
returning
following
developer
describes
hardwired
tutorials
debugging
instances
alexander
resources
iterative
framework
technique
technical
alexander
potential
factories
technical
increases
automatic
efficient
complexity
difference
technology
introduces
production
technology
createview
parameters
technology
consultant
technology
instanceof
consultant
particular
instanceof
technology
parameters
subclasses
connection
needlessly
explicitly
production
accessible
consulting
understand
maintained
beneficial
enterprise
introduced
technology
convenient
consulting
overridden
parameters
acceptable
discussion
co-created
introduces
lesiecki's
complexity
createview
production
overriding
createview
convention
diagnosing
validation
containing
validation
understand
substitute
burdensome
validation
refactoring
transaction
transaction
test-driven
established
testability
refactoring
refactoring
programming
appropriate
instantiate
transaction
transaction
refactoring
inefficient
impractical
transaction
unfortunate
implemented
refactoring
application
application
application
conventions
engineering
constructor
accommodate
isdisplayed
introducing
isdisplayed
methodology
practically
refactoring
transaction
transaction
transaction
transaction
refactoring
transaction
transaction
instantiate
refactoring
application
transaction
transaction
consistency
surrounding
appropriate
refactoring
opportunity
server-side
refactoring
refactoring
comfortable
occurrences
transaction
alternative
programming
occurrences
engineering
development
refactoring
refactoring
server-side
application
development
refactoring
consultants
interactive
information
programming
transaction
refactoring
programmers
refactoring
refactoring
transaction
refactoring
description
collaborator
expectations
presentation
accommodates
applications
collaborator
step-by-step
unit-testing
unit-testing
accompanying
collaborator
relationship
synchronized
collaborator
collaborator
specializes)
demystifying
entrepreneur
collaborator
collaborator
intermediate
implementing
collaborator
assertequals
collaborator
asserttrue(t
collaborator
collaborator
introduction
full-fledged
automatically
collaborators
processcalled
disadvantages
test-friendly
processcalled
corresponding
functionality
collaborators
functionality
multithreaded
endo-testing:
administration
specialization
infrastructure
specialization
user-interface
specialization
implementation
implementation
junit-specific
alex@jguru.com
non-anonymous)
asserttrue(!(t
developerworks
assertcontains
responsibility
assertcontains
specialization
mocktransaction
mocktransaction
addison-wesley,
object-oriented
dispense(amount
developerworks,
developerworks,
developerworks,
alex@jguru.com)
mocktransaction
mocktransaction
mocktransaction
applicationtest
mocktransaction
mocktransaction
mocktransaction
mocktransaction
developerworks,
testapplication
mocktransaction
mocktransaction
straightforward
addison-wesley,
startingbalance
mocktransaction
dispense(amount
atm.pressbuttons
atm.pressbuttons
createtransaction
createtransaction
createtransaction
mockview.validate
createtransaction
transaction.process
transaction.process
william@scissor.com
dowithdrawal(account
dowithdrawal(account
william@scissor.com)
transaction.getstatus
atm.createtransaction
transaction.getstatus
atm.getdisplaycontents
testcheckingwithdrawal
atm.getdisplaycontents
testcheckingwithdrawal
asserttrue(isdisplayed
transaction.successful(
transaction.successful(
asserttrue(processcalled
mocktransaction.validate
setstatus(status.success
atm.pressbutton("checking
atm.pressbutton("withdraw
atm.pressbutton("continue
insertcardandinputpin(atm
mocktransaction.getamount
atm.pressbutton("continue
insertcardandinputpin(atm
atm.pressbutton("checking
atm.pressbutton("withdraw
transaction.setamount(amount
assertequals(startingbalance
transaction.setamount(amount
balancefortestcheckingaccount
balancefortestcheckingaccount
assertequals(test_cash_account
mocktransaction.getdestaccount
mocktransaction.getsourceaccount
assertequals(test_checking_account
transaction.setsourceaccount(account
transaction.setsourceaccount(account
transaction.setdestaccount(mycashaccount
transaction.setdestaccount(mycashaccount
